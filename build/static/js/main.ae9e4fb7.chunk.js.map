{"version":3,"sources":["logo.svg","actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","securityUtils/setJwtToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/CreateButton.js","components/Dashboard.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","actions/backlogAction.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecuredRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","delete","setJwtToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","window","location","href","headerLink","security","validToken","user","userAuthenticated","userNotAuthenticated","data-toggle","data-target","state","CreateButton","Fragment","Dashboard","getProjects","projects","map","key","get","res","AddProject","onChange","onSubmit","nextProps","errors","setState","e","preventDefault","newProject","start_date","end_date","target","name","value","classnames","placeholder","initialState","project_tasks","project_task","setValidToken","combineReducers","action","filter","backlog","pt","projectSequence","middleware","thunk","reduxReactStoreExtension","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","addProjectTask","backlog_id","ProjectTask","onDragStart","dataTransfer","setData","pt_id","deleteProjectTask","priorityString","priorityClass","priority","draggable","summary","acceptanceCriteria","onDelete","Backlog","onDragOver","onDrop","status","ptIdentifier","ptObject","project_tasks_prop","getData","newProjectTasks","console","log","updateStatus","todos","inProgress","done","ProjectBoard","getBacklog","BoardContent","onDropFunc","length","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newProjectTask","UpdateProjectTask","create_At","getOneProjectTask","updateProjectTask","Landing","protype","Proptypes","object","isRequired","Register","username","fullname","password","confirmPassword","createNewUser","componentWillReceiveProps","class","newUser","Login","newLogin","login","LoginRequest","setItem","decoded","jwt_decode","component","otherProps","render","App","jwtToken","currentTime","Date","now","exp","exact","path","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ae9e4fb7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from 'axios';\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from './types';\r\n\r\nexport const createProject = (project, history) => async dispatch =>{\r\n    try {\r\n        await axios.post\r\n        (\"/api/project\", project)\r\n        history.push(\"/dashboard\") \r\n        dispatch({ \r\n            type:GET_ERRORS,\r\n            payload:{}\r\n        })\r\n    } catch (error) {\r\n        dispatch({ \r\n            type:GET_ERRORS,\r\n            payload:error.response.data\r\n        }) \r\n    }\r\n}\r\n\r\nexport const getProjects = () => async dispatch =>{\r\n    const res = await axios.get(\"/api/project/all\")\r\n    dispatch({\r\n        type: GET_PROJECTS,\r\n        payload: res.data\r\n    })\r\n}\r\n\r\nexport const getProject = (id, history) => async dispatch =>{\r\n    try {\r\n        const res = await axios.get(`/api/project/${id}`)\r\n        dispatch({\r\n            type: GET_PROJECT,\r\n            payload: res.data\r\n        })\r\n        \r\n    } catch (error) {\r\n        history.push(\"/dashboard\")\r\n    }\r\n}\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n        type: DELETE_PROJECT,\r\n        payload: id\r\n    })\r\n}    \r\n","export const GET_ERRORS = 'GET_ERRORS';\r\nexport const GET_PROJECTS = 'GET_PROJECTS';\r\nexport const GET_PROJECT = 'GET_PROJECT';\r\nexport const DELETE_PROJECT = 'DELETE_PROJECT'; \r\n\r\nexport const GET_BACKLOG = 'GET_BACKLOG';\r\nexport const GET_PROJECT_TASK = 'GET_PROJECT_TASK';\r\nexport const GET_ONE_PROJECT_TASK = 'GET_ONE_PROJECT_TASK';\r\nexport const DELETE_PROJECT_TASK = 'DELETE_PROJECT_TASK';\r\n\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import React, { Component } from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { deleteProject } from '../../actions/projectActions'\r\nclass ProjectItem extends Component {\r\n\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  }\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\">Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\">Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n                  <li className=\"list-group-item delete\" onClick={this.onDeleteClick.bind(this, project.projectIdentifier)}>\r\n                    <i className=\"fa fa-minus-circle pr-1\">Delete Project</i>\r\n                  </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {deleteProject}) (ProjectItem) ;\r\n","import axios from \"axios\";  \r\n\r\nconst setJwtToken = token => {\r\n    if (token) {\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    }else{\r\n        delete axios.defaults.headers.common[\"Authourization\"]\r\n    }\r\n}\r\n\r\nexport default setJwtToken ","import axios from 'axios'\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\"\r\nimport setJwtToken from '../securityUtils/setJwtToken';\r\nimport jwt_decode from 'jwt-decode'\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch =>{\r\n    try {\r\n        await axios.post(\"/api/users/register\", newUser);\r\n        history.push(\"/login\")\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n    try {\r\n        \r\n        // post Login request\r\n        const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n        \r\n        // extract token from res.data\r\n        const { token } = res.data; \r\n        \r\n        // store token in localStorage\r\n        localStorage.setItem(\"jwtToken\", token);\r\n        \r\n        //set token in header for request\r\n        setJwtToken(token);\r\n\r\n        // decode token in React\r\n        const decoded = jwt_decode(token);\r\n\r\n        //dispatch to the securityReducer\r\n        dispatch({\r\n            type:SET_CURRENT_USER,\r\n            payload:decoded\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:GET_ERRORS,\r\n            payload:error.response.data\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const logout = () => dispatch => {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    setJwtToken(false);\r\n    dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: {}\r\n    })\r\n}"," import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { logout } from '../../actions/securityActions'\r\n\r\n\r\nclass Header extends Component{\r\n\r\n    logout(){\r\n        this.props.logout() ;\r\n        window.location.href = \"/\";\r\n    }\r\n\r\n    render(){\r\n        const { validToken, user } = this.props.security;\r\n        \r\n        const userAuthenticated = (\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/dashboard\">\r\n                            Dashboard\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/dashboard\">\r\n                            <i className=\"fas fa-user-circle mr-1\" />\r\n                            \r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/logout\" onClick = {this.logout.bind(this)}>\r\n                            Logout \r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n\r\n        const userNotAuthenticated = (\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/register\">\r\n                            Sign Up\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/login\">\r\n                            Login\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n\r\n       let headerLink;\r\n       if(validToken && user){\r\n           headerLink = userAuthenticated;\r\n        } \r\n        else{\r\n            headerLink = userNotAuthenticated;\r\n        }\r\n\r\n        return(\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n            <div className=\"container\">\r\n                <Link className=\"navbar-brand\" to=\"/\">\r\n                    Personal Project Management Tool\r\n                </Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                    <span className=\"navbar-toggler-icon\" />\r\n                </button>\r\n                {headerLink}\r\n            </div>\r\n        </nav>\r\n        )\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n    security: state.security\r\n})\r\n\r\n export default connect(mapStateToProps, {logout})(Header)","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n const CreateButton = () =>  {\r\n    return (\r\n        <React.Fragment>\r\n            <Link to=\"/addProject\" href=\"ProjectForm.html\" className=\"btn btn-lg btn-info\">\r\n                Create a Project\r\n            </Link>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default CreateButton","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport Header from \"./Layout/Header\";\r\nimport CreateButton from \"./Project/CreateButton\";\r\nimport { connect } from 'react-redux'\r\nimport { getProjects } from '../actions/projectActions'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount(){\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project\r\n\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br /> \r\n              <CreateButton />\r\n              <br />\r\n              <hr />\r\n              {\r\n                projects.map(project => {\r\n                  return (<ProjectItem key={project.id} project={project}/>)\r\n                })\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project:PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateProps = state => ({\r\n  project:state.project\r\n})\r\n\r\nexport default connect (mapStateProps, {getProjects})(Dashboard);\r\n","import React, { Component } from 'react';\r\nimport ProtoTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../actions/projectActions';\r\nimport classnames from 'classnames'\r\n\r\nclass AddProject extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            \"projectName\": \"\",\r\n            \"projectIdentifier\": \"\",\r\n            \"description\": \"\",\r\n            \"start_date\": \"\",\r\n            \"end_date\": \"\",\r\n            \"errors\":{}\r\n        }\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n       }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if (nextProps.errors){\r\n            this.setState({ errors: nextProps.errors})\r\n        }\r\n    }   \r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        const newProject={\r\n            \"projectName\": this.state.projectName,\r\n            \"projectIdentifier\": this.state.projectIdentifier,\r\n            \"description\": this.state.description,\r\n            \"start_date\": this.state.start_date,\r\n            \"end_date\": this.state.end_date\r\n        }\r\n        this.props.createProject(newProject, this.props.history)\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n    \r\n    render() {\r\n        const {errors} = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"project\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8 m-auto\">\r\n                                <h5 className=\"display-4 text-center\">Create Project</h5>\r\n                                <hr />\r\n                                <form onSubmit={this.onSubmit}>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" className={classnames(\"form-control form-control-lg\", \r\n                                        {\"is-invalid\": errors.projectName})} \r\n                                        placeholder=\"Project Name\" name=\"projectName\"\r\n                                        value={this.state.projectName} onChange={this.onChange}/>\r\n                                        {errors.projectName &&\r\n                                         <div className=\"invalid-feedback\">\r\n                                            {errors.projectName}\r\n                                         </div>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" className={classnames(\"form-control form-control-lg\",\r\n                                        {\"is-invalid\": errors.projectIdentifier})} \r\n                                        placeholder=\"Unique Project Id\" name=\"projectIdentifier\"\r\n                                        value={this.state.projectIdentifier} onChange={this.onChange} />\r\n                                        {errors.projectIdentifier &&\r\n                                            <div className=\"invalid-feedback\">\r\n                                               {errors.projectIdentifier}\r\n                                            </div>\r\n                                           }\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <textarea className={classnames(\"form-control form-control-lg\",\r\n                                        {\"is-invalid\": errors.description})} \r\n                                        placeholder=\"Project Descripion\" name=\"description\"\r\n                                        value={this.state.description} onChange={this.onChange}></textarea>  \r\n                                        {errors.description &&\r\n                                            <div className=\"invalid-feedback\">\r\n                                               {errors.description}\r\n                                            </div>\r\n                                           }\r\n                                    </div>\r\n                                    <h6>Start Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"date\" className=\"form-control form-control-lg\" name=\"start_date\"\r\n                                        value={this.state.start_date} onChange={this.onChange}/>\r\n                                    </div>\r\n\r\n                                    <h6>Estimated End Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"date\" className=\"form-control form-control-lg\" name=\"end_date\"\r\n                                        value={this.state.end_date} onChange={this.onChange}/>\r\n                                    </div>\r\n                                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>   \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddProject.propTypes = {\r\n    createProject: ProtoTypes.func.isRequired,\r\n    errors: ProtoTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, {createProject}) (AddProject) \r\n ","import { GET_ERRORS } from \"../actions/types\"\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action){\r\n    switch (action.type){\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n  \r\n}","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT} from '../actions/types';\r\n\r\nconst initialState = {\r\n    projects: [],\r\n    project: {}\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch (action.type){\r\n        case GET_PROJECTS:\r\n        return {\r\n            ...state,\r\n            projects: action.payload\r\n        };\r\n        case GET_PROJECT:\r\n        return {\r\n            ...state,\r\n            project: action.payload\r\n        }\r\n        case DELETE_PROJECT:\r\n            return{\r\n                ...state,\r\n                projects: state.projects.filter( \r\n                    project => project.projectIdentifier != action.payload)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {GET_BACKLOG, GET_PROJECT_TASK, GET_ONE_PROJECT_TASK, DELETE_PROJECT_TASK} from '../actions/types'\r\n\r\nconst initialState = {\r\n    project_tasks: [],\r\n    project_task: {}\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n\r\n        case GET_BACKLOG:\r\n        return{\r\n            ...state,\r\n            project_tasks: action.payload\r\n        }\r\n\r\n        case GET_PROJECT_TASK:\r\n        return{\r\n            ...state,\r\n            project_tasks: action.payload\r\n        }\r\n\r\n        case GET_ONE_PROJECT_TASK:\r\n        return{\r\n            ...state,\r\n            project_task: action.payload\r\n        }\r\n\r\n        case DELETE_PROJECT_TASK:\r\n        return{\r\n            ...state,\r\n            project_tasks: state.project_tasks.filter( \r\n                pt => pt.projectSequence != action.payload)\r\n        }\r\n        default:\r\n        return state;\r\n    }\r\n}","import { SET_CURRENT_USER} from '../actions/types';\r\n\r\nconst initialState = {\r\n    user: {},\r\n    validToken: false\r\n};\r\n\r\nconst setValidToken = payload => {\r\n    return payload ? true : false;\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch (action.type){\r\n        case SET_CURRENT_USER:\r\n        return {\r\n            ...state,\r\n            user: action.payload,\r\n            validToken: setValidToken(action.payload)\r\n        };\r\n       \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport errorReducer from './errorReducer'\r\nimport projectReducer from './projectReducer';\r\nimport backlogReducer from './backlogReducer'\r\nimport securityReducer from './securityReducer';\r\n\r\nexport default combineReducers({\r\n    errors:errorReducer,\r\n    project: projectReducer,\r\n    backlog: backlogReducer,\r\n    security: securityReducer\r\n})","import { createStore, applyMiddleware, compose} from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\n \r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\nconst reduxReactStoreExtension = window.__REDUX_DEVTOOLS_EXTENSION__ && \r\nwindow.__REDUX_DEVTOOLS_EXTENSION__() ;\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && reduxReactStoreExtension) {\r\n    store = createStore(rootReducer, initialState, compose(\r\n        applyMiddleware(...middleware),\r\n        reduxReactStoreExtension\r\n    ));\r\n} else {\r\n    store = createStore(rootReducer, initialState, compose(\r\n        applyMiddleware(...middleware)));\r\n}\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport { getProject, createProject} from '../../actions/projectActions'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass UpdateProject extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            \"id\": \"\",\r\n            \"projectName\": \"\",\r\n            \"projectIdentifier\": \"\",\r\n            \"description\": \"\",\r\n            \"start_date\": \"\",\r\n            \"end_date\": \"\",\r\n            \"errors\":{}\r\n        }\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        if (nextProps.errors){\r\n            this.setState({ errors: nextProps.errors})\r\n        }\r\n        const {\r\n            id, \r\n            projectName,\r\n            projectIdentifier,\r\n            description,\r\n            start_date,\r\n            end_date\r\n        } = nextProps.project;\r\n\r\n        this.setState({\r\n            id, \r\n            projectName,\r\n            projectIdentifier,\r\n            description,\r\n            start_date,\r\n            end_date\r\n        })\r\n    }\r\n    \r\n    componentDidMount(){\r\n        const { id } = this.props.match.params;\r\n        this.props.getProject( id, this.props.history)\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        const updateProject={\r\n            \"id\": this.state.id,\r\n            \"projectName\": this.state.projectName,\r\n            \"projectIdentifier\": this.state.projectIdentifier,\r\n            \"description\": this.state.description,\r\n            \"start_date\": this.state.start_date,\r\n            \"end_date\": this.state.end_date\r\n        }\r\n        this.props.createProject(updateProject, this.props.history)\r\n    }\r\n    onChange(e){\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n \r\n    render() {\r\n        const {errors} = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"project\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8 m-auto\">\r\n                                <h5 className=\"display-4 text-center\">Update Project</h5>\r\n                                <hr />\r\n                                <form onSubmit={this.onSubmit}>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" className={classnames(\"form-control form-control-lg\", \r\n                                        {\"is-invalid\": errors.projectName})}\r\n                                        name=\"projectName\"\r\n                                        onChange={this.onChange}\r\n                                        value={this.state.projectName}/>\r\n                                        {errors.projectName &&\r\n                                            <div className=\"invalid-feedback\">\r\n                                               {errors.projectName}\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Unique Project Identifier\" \r\n                                        onChange={this.onChange}\r\n                                        value={this.state.projectIdentifier}\r\n                                        disabled/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <textarea className={classnames(\"form-control form-control-lg\", \r\n                                        {\"is-invalid\": errors.description})}\r\n                                        name=\"description\"\r\n                                        onChange={this.onChange}\r\n                                        value={this.state.description}></textarea>\r\n                                        {errors.projectName &&\r\n                                            <div className=\"invalid-feedback\">\r\n                                               {errors.projectName}\r\n                                            </div>\r\n                                        }  \r\n                                    </div>\r\n                                    <h6>Start Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"date\" className=\"form-control form-control-lg\" name=\"start_date\"\r\n                                        onChange={this.onChange}\r\n                                        value={this.state.start_date}/>\r\n                                    </div>\r\n\r\n                                    <h6>Estimated End Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"date\" className=\"form-control form-control-lg\" name=\"end_date\"\r\n                                        onChange={this.onChange}\r\n                                        value={this.state.end_date}/>\r\n                                    </div>\r\n                                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>   \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n    getProject: PropTypes.func.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    createProject: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project: state.project.project,\r\n    errors: state.errors\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {getProject, createProject}) (UpdateProject)\r\n ","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_ONE_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"../actions/types\";\r\n\r\nexport const addProjectTask = (\r\n  backlog_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.post(\r\n      `/api/backlog/${backlog_id}`,\r\n      project_task\r\n    );\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const updateStatus = (backlog_id, project_task) => async dispatch => {\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n};\r\n\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(\r\n      `/api/backlog/${backlog_id}`\r\n    );\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOneProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(\r\n      `/api/backlog/${backlog_id}/${pt_id}`\r\n    );\r\n    dispatch({\r\n      type: GET_ONE_PROJECT_TASK,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n    await axios.delete(\r\n      `/api/backlog/${backlog_id}/${pt_id}`\r\n    );\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id\r\n    });\r\n};\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteProjectTask } from '../../../actions/backlogAction';\r\n\r\nclass ProjectTask extends Component {\r\n    constructor(){\r\n        super()\r\n\r\n        this.onDragStart = this.onDragStart.bind(this);\r\n    }\r\n\r\n    onDragStart = (e, id) => {\r\n        e.dataTransfer.setData(\"id\", id)\r\n    }\r\n\r\n    onDelete(backlog_id, pt_id){\r\n        this.props.deleteProjectTask(backlog_id, pt_id);\r\n    }\r\n    \r\n    render() \r\n    {\r\n        const {project_task} = this.props;\r\n        let priorityString, priorityClass;\r\n\r\n        if (project_task.priority === 1){\r\n            priorityClass = \"bg-danger text-light\";\r\n            priorityString = \"HIGH\"\r\n        }else if(project_task.priority ===2) {\r\n            priorityClass = \"bg-warning text-light\";\r\n            priorityString = \"MEDIUM\"\r\n        }else{\r\n            priorityClass = \"bg-info text-light\";\r\n            priorityString = \"LOW\"\r\n        }\r\n\r\n        return (\r\n            <div className=\"card mb-1 bg-light\"> \r\n                <div className={`card-header text-primary ${priorityClass}`} draggable onDragStart={(e) => this.onDragStart(e, project_task.projectSequence)} >\r\n                    ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n                </div>\r\n                <div className=\"card-body bg-light\">\r\n                    <h5 className=\"card-title\">{project_task.summary}</h5>\r\n                    <p className=\"card-text text-truncate\">{project_task.acceptanceCriteria}</p>\r\n                    <Link to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}  className=\"btn btn-primary\">View / Update </Link>\r\n                    <button className=\"btn btn-danger ml-4\" onClick={this.onDelete.bind(this, project_task.projectIdentifier, project_task.projectSequence)}>Delete</button>\r\n                </div>\r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n    deleteProjectTask: PropTypes.func.isRequired\r\n}\r\nexport default connect(null,{deleteProjectTask})(ProjectTask)\r\n","import React, { Component } from 'react'\r\nimport ProjectTask from './ProjectTasks/ProjectTask'\r\nimport { connect } from 'react-redux';\r\nimport { updateStatus } from '../../actions/backlogAction';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Backlog extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n                ...this.state\r\n        }\r\n\r\n        this.onDragOver = this.onDragOver.bind(this);\r\n        this.onDrop = this.onDrop.bind(this);\r\n    }\r\n\r\n    onDragOver = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    onDrop = (e, status) =>{\r\n        const { project_tasks_prop } = this.props;\r\n        let id = e.dataTransfer.getData(\"id\");\r\n        let ptIdentifier, ptObject;\r\n\r\n        let newProjectTasks = project_tasks_prop.filter((pt) => {\r\n            if (pt.projectSequence == id) {\r\n                pt.status = status;\r\n                ptIdentifier = pt.projectIdentifier;\r\n                ptObject = pt\r\n            }\r\n            return pt;\r\n        })\r\n        this.setState({\r\n            ...this.state,\r\n            backlog:{\r\n                project_tasks: newProjectTasks\r\n            }\r\n        })\r\n        console.log( this.props.history);\r\n        \r\n        this.props.updateStatus(ptIdentifier, ptObject)\r\n    }\r\n\r\n    render() {\r\n\r\n        let todos = [], inProgress = [], done = [];\r\n        const { project_tasks_prop } = this.props;\r\n        project_tasks_prop.map(pt =>\r\n            pt.status === \"TO_DO\" ? todos.push(<ProjectTask key={pt.id} project_task={pt}/>) : (\r\n            pt.status === \"IN_PROGRESS\" ? inProgress.push(<ProjectTask key={pt.id} project_task={pt}/>) : \r\n            done.push(<ProjectTask key={pt.id} project_task={pt}/>)))\r\n\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\"\r\n                    onDragOver = {(e) => this.onDragOver(e)}\r\n                    onDrop={(e) => this.onDrop(e, \"TO_DO\")}\r\n                    >\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-secondary text-white\">\r\n                                <h3>TO DO</h3>\r\n                            </div>\r\n                        </div>\r\n                        {todos}\r\n                    </div>\r\n\r\n                    <div className=\"col-md-4\"\r\n                        onDragOver={(e) => {this.onDragOver(e)}}\r\n                        onDrop={(e) => {this.onDrop(e, \"IN_PROGRESS\")}}\r\n                    >\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-primary text-white\">\r\n                                <h3>In Progress</h3>\r\n                            </div>\r\n                        </div>\r\n                        {inProgress}\r\n                    </div>\r\n                    <div className=\"col-md-4\"\r\n                        onDragOver={(e) => {this.onDragOver(e)}}\r\n                        onDrop={(e) => {this.onDrop(e, \"DONE\")}}>\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-success text-white\">\r\n                                <h3>Done</h3>\r\n                            </div>\r\n                        </div>\r\n                        {done}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nBacklog.propTypes = {\r\n    updateStatus: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {updateStatus})(Backlog)\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Backlog from './Backlog';\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { getBacklog } from '../../actions/backlogAction'\r\n\r\n\r\nclass ProjectBoard extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            errors: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { id } = this.props.match.params;\r\n        this.props.getBacklog(id);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({\r\n                errors : nextProps.errors\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {id} = this.props.match.params;\r\n        const { project_tasks } = this.props.backlog;\r\n        const { errors } = this.state;\r\n        const onDropFunc = this.onDrop;\r\n\r\n        let BoardContent;\r\n\r\n        const boardAlgorithm = (errors, project_tasks) =>{\r\n            if (project_tasks.length < 1){\r\n                if(errors.projectNotFound){\r\n                    return (\r\n                        <div className=\"alert alert-danger txt-center\" role=\"alert\">\r\n                            {errors.projectNotFound}\r\n                        </div>\r\n                    )\r\n                }\r\n                else if (errors.projectIdentifier){\r\n                    return (\r\n                        <div className=\"alert alert-danger txt-center\" role=\"alert\">\r\n                            {errors.projectIdentifier}\r\n                        </div>\r\n                    )\r\n                }else{\r\n                    return (<div className=\"alert alert-info txt-center\" role=\"alert\">\r\n                        No Project Task on this board\r\n                    </div>)    \r\n                }\r\n            }else{\r\n                return <Backlog project_tasks_prop={project_tasks} onDropFunc={onDropFunc} />;\r\n            }\r\n        }\r\n\r\n        BoardContent = boardAlgorithm(errors, project_tasks);\r\n        return (\r\n                <div className=\"container\">\r\n                    <Link to= {`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n                        <i className=\"fas fa-plus-circle\">Create Project Task</i>\r\n                    </Link>\r\n                    <br />\r\n                    <hr />\r\n                    {BoardContent}\r\n                </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n    backlog: PropTypes.object.isRequired,\r\n    getBacklog: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    backlog: state.backlog,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, {getBacklog}) (ProjectBoard)","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { addProjectTask } from \"../../../actions/backlogAction\";\r\nimport classnames from \"classnames\";\r\nimport ProtoTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProjectTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n    \r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { id } = this.props.match.params;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task Summary\"\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                    name=\"acceptanceCriteria\"\r\n                    placeholder=\"Acceptance Criteria\"></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: ProtoTypes.func.isRequired,\r\n  errors: ProtoTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { connect } from 'react-redux'\r\nimport { getOneProjectTask, addProjectTask } from '../../../actions/backlogAction'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass UpdateProjectTask extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            id: \"\",\r\n            summary: \"\",\r\n            projectSequence: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority: \"\",\r\n            dueDate: \"\",\r\n            projectIdentifier: \"\",\r\n            create_At:\"\",\r\n            errors: {}\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this); \r\n    }\r\n\r\n    componentDidMount(){\r\n        const { backlog_id, pt_id } = this.props.match.params;\r\n        this.props.getOneProjectTask(backlog_id, pt_id, this.props.history);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if (nextProps.errors){\r\n            this.setState({ errors: nextProps.errors})\r\n        }\r\n        const {\r\n            id,\r\n            summary,\r\n            projectSequence,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,\r\n            create_At\r\n        } = nextProps.project_task;\r\n\r\n        this.setState({\r\n            id,\r\n            summary,\r\n            projectSequence,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,\r\n            create_At\r\n        })\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        const updateProjectTask={\r\n            id: this.state.id,\r\n            summary: this.state.summary,\r\n            projectSequence: this.state.projectSequence,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            create_At: this.state.create_At\r\n        }\r\n        this.props.addProjectTask(this.props.project_task.projectIdentifier, \r\n                                    updateProjectTask, this.props.history)\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"add-PBI\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <Link to={`/projectBoard/${this.state.projectIdentifier }`} className=\"btn btn-light\">\r\n                                Back to Project Board\r\n                            </Link>\r\n                            <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n                            <p className=\"lead text-center\">Project Name:{this.state.projectIdentifier} | Project Code:{this.state.projectSequence}</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" \r\n                                    className={classnames(\"form-control form-control-lg\", \r\n                                    {\"is-invalid\": errors.summary})}\r\n                                    name=\"summary\"\r\n                                    value={this.state.summary}\r\n                                    onChange={this.onChange}\r\n                                    />\r\n                                    {errors.summary &&\r\n                                        <div className=\"invalid-feedback\">\r\n                                           {errors.summary}\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\"> \r\n                                <textarea\r\n                                    className=\"form-control form-control-lg\"\r\n                                    name=\"acceptanceCriteria\"\r\n                                    value={this.state.acceptanceCriteria}\r\n                                    onChange={this.onChange}                             \r\n                                    ></textarea>\r\n                                </div>\r\n                                    <h6>Due Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"dueDate\"\r\n                                        value={this.state.dueDate}\r\n                                        onChange={this.onChange}                                      \r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"priority\"\r\n                                        value={this.state.priority}\r\n                                        onChange={this.onChange}                                        \r\n                                        >\r\n                                        <option value={0}>Select Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"status\"\r\n                                        value={this.state.status}\r\n                                        onChange={this.onChange}\r\n                                        >\r\n                                        <option value=\"\">Select Status</option>\r\n                                        <option value=\"TO_DO\">TO DO</option>\r\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                        <option value=\"DONE\">DONE</option>\r\n                                    </select>\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n    getOneProjectTask: PropTypes.func.isRequired,\r\n    addProjectTask: PropTypes.func.isRequired,\r\n    project_task: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n   \r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project_task: state.backlog.project_task,\r\n    errors: state.errors\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {getOneProjectTask, addProjectTask}) (UpdateProjectTask);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Proptypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Landing extends Component {\r\n\r\n    //while a user is signed in, redirect to this component\r\n    componentDidMount(){\r\n        if(this.props.security.validToken){\r\n            this.props.history.push(\"/dashboard\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n            <div className=\"Light-overlay landing-inner text-dark \">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <h1 className=\"display-3 mb-4\">Personal Project Management Tool</h1>\r\n                            <p className=\"lead\">\r\n                                Create your account to join active projects or start your own\r\n                            </p>\r\n                            <hr />\r\n                            <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n                                Sign Up\r\n                            </Link>\r\n                            <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                                Login\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nLanding.protype = {\r\n    security: Proptypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing)","import React, { Component } from 'react'\r\nimport { createNewUser } from '../../actions/securityActions';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\"\r\n\r\n\r\nclass Register extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            fullname: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            errors:{}\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const user = {\r\n            username: this.state.username,\r\n            fullname: this.state.fullname,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword\r\n        }\r\n        this.props.createNewUser(user, this.props.history);\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.errors){\r\n            this.setState({\r\n                errors:nextProps.errors\r\n            })\r\n        }\r\n    }\r\n\r\n    //while a user is signed in, redirect to this component\r\n    componentDidMount(){\r\n        if(this.props.security.validToken){\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    render() {\r\n        const {errors} = this.state;\r\n        return (\r\n            <div className=\"register\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                            <p className=\"lead text-center\">Create your account</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\"\r\n                                        className={classnames(\"form-control form-control-lg\" , {\"is-invalid\": errors.fullname})}\r\n                                        placeholder=\"Full Name\"\r\n                                        name=\"fullname\"\r\n                                        value={this.state.fullname}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.fullname && (\r\n                                        <div className=\"invalid-feedback\">{errors.fullname}</div>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"email\"\r\n                                        className={classnames(\"form-control form-control-lg\" , {\"is-invalid\": errors.username})}\r\n                                        placeholder=\"Username\"\r\n                                        name=\"username\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.username && (\r\n                                        <div className=\"invalid-feedback\">{errors.username}</div>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"password\"\r\n                                        className={classnames(\"form-control form-control-lg\" , {\"is-invalid\": errors.password})}\r\n                                        placeholder=\"Password\"\r\n                                        name=\"password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.password && (\r\n                                        <div className=\"invalid-feedback\">{errors.password}</div>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"password\"\r\n                                        className={classnames(\"form-control form-control-lg\" , {\"is-invalid\": errors.confirmPassword})}\r\n                                        placeholder=\"Confirm Password\"\r\n                                        name=\"confirmPassword\"\r\n                                        value={this.state.confirmPassword}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.confirmPassword && (\r\n                                        <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\r\n                                    )}\r\n                                </div>\r\n                                <input type=\"submit\" class=\"btn btn-info btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    createNewUser: PropTypes.func.isRequired,\r\n    security: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    security: state.security,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, {createNewUser})(Register);","import React, { Component } from 'react'\r\nimport { login } from '../../actions/securityActions';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\"\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            errors: {}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({[e.target.name] : e.target.value});\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newLogin = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }\r\n        this.props.login(newLogin)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.security.validToken){\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n        if(nextProps.errors){\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    //while a user is signed in, redirect to this component\r\n    componentDidMount(){\r\n        if(this.props.security.validToken){\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Login</h1>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"email\" \r\n                                    className={classnames(\"form-control form-control-lg\", {\"is-invalid\": errors.username})}\r\n                                    placeholder=\"Username\" \r\n                                    name=\"username\"\r\n                                    value={this.state.username}\r\n                                    onChange={this.onChange}\r\n                                    />\r\n                                    {errors.username && (\r\n                                        <div className=\"invalid-feedback\">{errors.username}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" \r\n                                    className={classnames(\"form-control form-control-lg\", {\"is-invalid\": errors.password})} \r\n                                    placeholder=\"Password\" \r\n                                    name=\"password\"\r\n                                    value={this.state.password}\r\n                                    onChange={this.onChange}\r\n                                    />\r\n                                    {errors.password && (\r\n                                        <div className=\"invalid-feedback\">{errors.password}</div>\r\n                                    )}\r\n                                </div>\r\n                                <input type=\"submit\" class=\"btn btn-info btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    security: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    security: state.security,\r\n    errors: state.errors\r\n})\r\nexport default connect(mapStateToProps, {login}) (Login);","import React, { Component } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst  SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n    <Route \r\n        {...otherProps}\r\n        render = { props => \r\n            security.validToken === true ? (\r\n                <Component { ...props } />\r\n            ) : (\r\n                <Redirect to=\"/login\" /> \r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute)","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Layout/Header'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport AddProject from './components/Project/AddProject';\nimport { Provider } from 'react-redux';\nimport store from './store'\nimport UpdateProject from './components/Project/UpdateProject';\nimport ProjectBoard from './components/ProjectBoard/ProjectBoard';\nimport AddProjectTask from './components/ProjectBoard/ProjectTasks/AddProjectTask';\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTasks/UpdateProjectTask';\nimport Landing from './components/Layout/Landing';\nimport Register from './components/UserManagement/Register';\nimport Login from './components/UserManagement/Login';\nimport setJwtToken from './securityUtils/setJwtToken';\nimport { SET_CURRENT_USER } from './actions/types';\nimport jwt_decode from 'jwt-decode'\nimport { logout } from './actions/securityActions';\nimport SecuredRoute from './securityUtils/SecuredRoute'\n\nfunction App() {\n\n  const jwtToken = localStorage.jwtToken;\n\n  if (jwtToken){\n    setJwtToken(jwtToken);\n    const decoded = jwt_decode(jwtToken);\n    store.dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n\n    const currentTime = Date.now() / 1000;\n    if( decoded.exp < currentTime){\n      store.dispatch(logout());\n      window.location.href = \"/\"\n    }\n  }\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\"> \n          <Header />\n\n          <Route exact path=\"/\" component={Landing}/>\n          <Route exact path=\"/register\" component={Register}/>\n          <Route exact path=\"/login\" component={Login}/>   \n\n          <Switch>\n            <SecuredRoute exact path=\"/dashboard\" component={ Dashboard }/>\n            <SecuredRoute exact path=\"/addProject\" component={ AddProject } />\n            <SecuredRoute exact path=\"/updateProject/:id\" component={ UpdateProject } />\n            <SecuredRoute exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n            <SecuredRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask} />\n            <SecuredRoute exact path=\"/updateProjectTask/:backlog_id/:pt_id\" component={UpdateProjectTask} />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}